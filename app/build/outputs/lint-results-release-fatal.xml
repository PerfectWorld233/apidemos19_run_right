<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 24.4.1">

    <issue
        id="ResAuto"
        severity="Fatal"
        message="In Gradle projects, always use `http://schemas.android.com/apk/res-auto` for custom attributes"
        category="Correctness"
        priority="9"
        summary="Hardcoded Package in Namespace"
        explanation="In Gradle projects, the actual package used in the final APK can vary; for example,you can add a `.debug` package suffix in one version and not the other. Therefore, you should *not* hardcode the application package in the resource; instead, use the special namespace `http://schemas.android.com/apk/res-auto` which will cause the tools to figure out the right namespace for the resource regardless of the actual package used during the build."
        errorLine1="        xmlns:app=&quot;http://schemas.android.com/apk/res/com.example.android.apis&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\res\layout\custom_layout.xml"
            line="22"
            column="20"/>
    </issue>

    <issue
        id="ResAuto"
        severity="Fatal"
        message="In Gradle projects, always use `http://schemas.android.com/apk/res-auto` for custom attributes"
        category="Correctness"
        priority="9"
        summary="Hardcoded Package in Namespace"
        explanation="In Gradle projects, the actual package used in the final APK can vary; for example,you can add a `.debug` package suffix in one version and not the other. Therefore, you should *not* hardcode the application package in the resource; instead, use the special namespace `http://schemas.android.com/apk/res-auto` which will cause the tools to figure out the right namespace for the resource regardless of the actual package used during the build."
        errorLine1="        xmlns:app=&quot;http://schemas.android.com/apk/res/com.example.android.apis&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\res\layout\custom_view_1.xml"
            line="20"
            column="20"/>
    </issue>

    <issue
        id="ResAuto"
        severity="Fatal"
        message="In Gradle projects, always use `http://schemas.android.com/apk/res-auto` for custom attributes"
        category="Correctness"
        priority="9"
        summary="Hardcoded Package in Namespace"
        explanation="In Gradle projects, the actual package used in the final APK can vary; for example,you can add a `.debug` package suffix in one version and not the other. Therefore, you should *not* hardcode the application package in the resource; instead, use the special namespace `http://schemas.android.com/apk/res-auto` which will cause the tools to figure out the right namespace for the resource regardless of the actual package used during the build."
        errorLine1="    xmlns:dot=&quot;http://schemas.android.com/apk/res/com.example.android.apis&quot;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\res\layout\drag_layout.xml"
            line="20"
            column="16"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="            InputStream is = context.getResources().openRawResource(R.drawable.app_sample_code);"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\graphics\AlphaBitmap.java"
            line="64"
            column="69"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type animator"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="                        loadAnimator(appContext, R.anim.object_animator);"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\animation\AnimationLoading.java"
            line="88"
            column="50"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type animator"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="                        loadAnimator(appContext, R.anim.animator);"
        errorLine2="                                                 ~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\animation\AnimationLoading.java"
            line="93"
            column="50"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type animator"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="                        R.anim.animator_set);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\animation\AnimationLoading.java"
            line="102"
            column="25"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type animator"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="                        loadAnimator(appContext, R.anim.color_animator);"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\animation\AnimationLoading.java"
            line="106"
            column="50"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="            is = context.getResources().openRawResource(R.drawable.beach);"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\graphics\BitmapDecode.java"
            line="69"
            column="57"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="            is = context.getResources().openRawResource(R.drawable.frog);"
        errorLine2="                                                        ~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\graphics\BitmapDecode.java"
            line="87"
            column="57"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="            is = context.getResources().openRawResource(R.drawable.animated_gif);"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\graphics\BitmapDecode.java"
            line="103"
            column="57"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="            InputStream is = getResources().openRawResource(R.drawable.balloons);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\content\ExternalStorage.java"
            line="198"
            column="61"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="            InputStream is = getResources().openRawResource(R.drawable.balloons);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\content\ExternalStorage.java"
            line="262"
            column="61"/>
    </issue>

    <issue
        id="ResourceType"
        severity="Fatal"
        message="Expected resource of type raw"
        category="Correctness"
        priority="7"
        summary="Wrong Resource Type"
        explanation="Ensures that resource id&apos;s passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong."
        errorLine1="             InputStream is = getResources().openRawResource(R.drawable.balloons);"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\content\ExternalStorage.java"
            line="324"
            column="62"/>
    </issue>

    <issue
        id="ValidFragment"
        severity="Fatal"
        message="This fragment class should be public (com.example.android.apis.app.ActionBarTabs.TabContentFragment)"
        category="Correctness"
        priority="6"
        summary="Fragment not instantiatable"
        explanation="From the Fragment documentation:
*Every* fragment must have an empty constructor, so it can be instantiated when restoring its activity&apos;s state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`."
        url="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        urls="http://developer.android.com/reference/android/app/Fragment.html#Fragment()"
        errorLine1="    private class TabContentFragment extends Fragment {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="D:\android EXE\ApiDemos19\app\src\main\java\com\example\android\apis\app\ActionBarTabs.java"
            line="110"
            column="19"/>
    </issue>

</issues>
